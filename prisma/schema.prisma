// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  campaigns     Campaign[]
  donations     Donation[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Campaign {
  id          String     @id @default(cuid())
  title       String
  description String     @db.Text
  yellowCardAmount Decimal  @default(0) // Amount per yellow card
  redCardAmount    Decimal  @default(0) // Amount per red card
  yellowCards      Int      @default(0) // Number of yellow cards accumulated
  redCards         Int      @default(0) // Number of red cards accumulated
  matchDate        DateTime
  teamName         String
  opponentName     String
  status          String    @default("active") // active, completed, cancelled
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  userId          String
  user            User      @relation(fields: [userId], references: [id])
  donations       Donation[]
}

model Donation {
  id         String   @id @default(cuid())
  amount     Float
  message    String?  @db.Text
  createdAt  DateTime @default(now())
  userId     String
  campaignId String
  user       User     @relation(fields: [userId], references: [id])
  campaign   Campaign @relation(fields: [campaignId], references: [id])
} 